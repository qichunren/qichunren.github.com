####### build_scripts_in_jenkins.sh

sudo rm -rf luna-server
git clone git@g77k.com:luna-server.git
cd luna-server
echo "########## GIT LOGS BELOW 10 LINES ############"
echo ""
git log | head -n 10
echo "########## GIT LOGS ENDS ############"
echo ""
echo ""
chmod +x ./script/auto_build_deb.sh && \
./script/auto_build_deb.sh


#############################
#####  Build periodically
#####  3 2 * * *
#############################



######### auto_build_deb.sh

#!/bin/bash

PWD=`pwd`
echo "Run as `whoami` at `pwd`"
REPOS_DIR="/opt/repositories"
RELEASES="/opt/releases"
BUILD_CACHE="/opt/build_cache"
TAG_NAME=master # as version name
REPO_NAME=luna-server
LUNA_DEPLOYMENT_DIR="/home/c2h2/rails-project/luna-deployment"

#
# Abort with <msg>
#

abort() {
  echo
  echo "   x   $@" 1>&2
  echo
  exit 1
}

### log message
log() {
  local NOW=$(date +"%Y-%m-%d %H:%M:%S")
  echo "[$NOW] $@"
}

if [ $# -eq 1  ]; then
  log "Set TAG_NAME to $1"
  TAG_NAME=$1
else
  log "Use default branch [${TAG_NAME}] for build package."
fi

### Check build environment
check_dependence() {
  log "Checking dependence"
  which ruby > /dev/null
  if [ $? -eq 0 ]; then
   log "Ruby installed"
  else
    abort "ruby not installed";
  fi

  which bundle > /dev/null
  if [ $? -eq 0 ]; then
   log "Bundler installed"
  else
    abort "Bundler not installed";
  fi
}


### version info is in luna-server/config/VERSION
bump_release_version() {
  date_str=`date +%Y%m%d%H%M%S`
  version_hash=`git rev-parse --verify HEAD`
  version_name="${date_str}.${version_hash:0:9}"
  chmod +x ./script/bump_version && ./script/bump_version $version_name $version_hash > config/VERSION
  test $? -eq 0 || abort "bump version failed";
}

### Remove files in package, there files are not used in production mode, such as git directory
remove_files_for_release() {
  rm -rf .gitignore .pryrc .rspec .tm_properties Capfile Guardfile logfile Procfile start.sh test.log update.sh update_luna_fs.rb .git/ .gitignore tmp/cache/* back/* log/production.log log/development.log log/test.log script/bump_version spec/*
}



## Start here
check_dependence
bump_release_version
bundle package --all
bundle install --deployment
bundle exec rake db:migrate RAILS_ENV=production
bundle exec rake assets:precompile
#remove_files_for_release



