<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | 蕲春人的博客]]></title>
  <link href="http://qichunren.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://qichunren.github.io/"/>
  <updated>2013-10-10T13:24:48+08:00</updated>
  <id>http://qichunren.github.io/</id>
  <author>
    <name><![CDATA[qichunren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Rubyencoder encrypt ruby code]]></title>
    <link href="http://qichunren.github.io/blog/2012-02-27-use-rubyencoder-encrypt-ruby-code/"/>
    <updated>2012-02-27T13:10:00+08:00</updated>
    <id>http://qichunren.github.io/blog/use-rubyencoder-encrypt-ruby-code</id>
    <content type="html"><![CDATA[<p>前些时候研究了一下ruby encoder的加密技术应用，在这里记录一下它的使用过程。</p>

<p><a href="http://rubyencoder.com/">Ruby Encoder</a>将ruby代码加密成不易阅读的格式，然后通过它提供的加载类型来载入ruby代码，从而达到加密的目的。它是一个付费软件，一个许可证要159美金，提供试用版，可以试用一个星期，支持Linux \ FreeBSD \ Mac OS X \ Windows系统。</p>

<p>首先在Ruby Encoder上注册一个帐号，登录进去后，我这里选择下载Mac OS X版的，RubyEncoder Trial for Mac OS X （RubyEncoder_1.3_Trial.dmg），下载后，将dmg中的程序拖到applications目录，就算安装好了。
<code>
qichunren:~ qichunren$ cd /Applications/RubyEncoder/
qichunren:RubyEncoder qichunren$ ls
Icon?               RubyEncoder_User_Manual.pdf bin/
README              Start RubyEncoder.app*      rgloader/
</code>
第一次使用的话，需要它的官方网站给你提供一个许可证文件(文件名为encode.lic),进行Ruby Encoder的bin目录,执行其中的rubyencoder文件, 它会输出一些它的软件声明信息，一直回车后几次后，阅读完许可声明，它还要求你输入'I AGREE'后，然后输出一个注册码（Reg Key）,要求你登录到它的网站中，在个人帐户里，在页面最下面的Available Licenses中填入注册码，然后下载它提供的encode.lic文件，放在Ruby Encoder的bin目录中，现在就可以使用Ruby Encoder了。</p>

<p>直接执行一下rubyencoder命令，可以先了解一下它的用法。
```
qichunren:bin qichunren$ ./rubyencoder
RubyEncoder 1.3 Evaluation (built: Aug 31 2010 11:55:25)
Copyright (c) 2008-2010 rubyencoder.com
Supports encoding for Ruby versions: 1.8.6,1.8.7,1.9.0,1.9.1,1.9.2</p>

<p>Usage,    single file: rubyencoder [options] file.rb</p>

<pre><code>   multiple files: rubyencoder [options] file1.rb file2.rb file3.rb
        file mask: rubyencoder [options] "*.rb"
        file list: rubyencoder [options] @filelist
</code></pre>

<p>  --ruby <version x.y>              Encode for Ruby ver (1.8 default and/or 1.9)
* --expire <dd/mm/yyyy>             Set script expiration date
* --days <nn>                       Set script expiration days (from today)
* --domain <domain>                 Bind script to domain name
* --domain-encrypt <domain>         Bind and encrypt to domain name (one only)
* --ip &lt;x.x.x.x[/y.y.y.y]>          Bind script to ip/mask
* --ip-encrypt &lt;x.x.x.x[/y.y.y.y]>  Bind and encrypt to ip/mask (one only)
* --mac &lt;x:x:x:x:x:x>               Bind script to mac address
* --external <filename>             Script will require license file to run
* --projid <value>                  Set project id (required for ext license)
* --projkey <value>                 Set project key (required for ext license)
* --time-server &lt;server,server,...> Set time server (for expiration date check)
* script locking options are disabled for evaluation version</p>

<p>  --const name=value                Set custom defined constant
  --catch err=function              Set custom error handler</p>

<p>  -p "code"|@file  Prepend header code
  -j "code"|@file  Change default loader error code
  -b <ext>         Set file extension for backup files (bak is default)
  -b-              Disable backup of source files (be careful!)
  -r               Recurse subdirectories (use quotes for file masks)
  -x "mask"|@list  Exclude files from encoding
  -f "mask"|@list  Encode only these files
  -o <output_dir>  Specify output directory for encoded scripts
  -w               Wait for key press before exit
  -q               Display settings and request confirmation
  -v               Display version number
  -l               Display license information
  -h               Display this help
```</p>

<p>像我给公司做的一个小项目，我只需要加密rails目录中的app目录就足够了，官方也建议只加密app目录就行了，可能是为了避免一些加密问题？
<code>
qichunren:bin qichunren$ ./rubyencoder --ruby 1.9 /Users/qichunren/code/menu/app/**/*.rb
</code>
这样就完成了app目录中的rb代码加密，同时它还备份了原来的rb文件，是同名的后缀为bak的文件，在部署中应该将.bak文件都删除掉。还有一件事情要做，需要把Ruby Encoder的相当于解密的加载器文件复制到app目录中，也就是加密代码的上一级目录里面来，这样项目可以正常执行了。
<code>
qichunren:RubyEncoder qichunren$ pwd
/Applications/RubyEncoder
qichunren:RubyEncoder qichunren$ cp -r rgloader/ /Users/qichunren/code/menu/app/
</code></p>

<p>下面是我咨询的关于Ruby Encoder的许可证相关的几个问题的官方回复邮件。
```
Hi,</p>

<p>Thank you for your interest in RubyEncoder. Please find answers below.</p>

<blockquote><ol>
<li><p>After I paid $159 for RubyEncoder, do I have license to run rubyencoder on different machines for different systems(mac or linux). I have serval machines for development and deployment.
RubyEncoder is licensed per-machine. One license lets you install and
use the encoder to one physical or virtual machine. If you use multiple
machines for development you may purchase additional licenses for $99
each. Note, loaders that are required to run protected files are free.</p></li>
<li><p>I developed on Mac OSX system usually, then deploy my rails application on Linux (Ubuntu 11). This goes well currently. I want to know after encode my rails 3 application on mac, then will it goes well on my deployed Linux machine?
Yes, you encode on your Mac and then install encoded files to your Linux
machine as usual. To run protected files on Linux you need to install
(copy a folder) RubyEncoder loaders for Linux to your rails root folder.
With version 1.3 you can encode your application controllers, helpers
and model rails files. Do not encode any other standard or configuration
rails files. For non-rails Ruby files you may encode any code. Ruby
verisons 1.8.6,1.8.7.1.9.0-1.9.3 are supported.</p></li>
<li><p>After I paid $159 for RubyEncoder, do I have to paid again for your update version? Can I get free follow-on support service and software update?
Once you pay you get 1 year of free support and updates.</p></li>
<li><p>How long is a paid license?</p></li>
</ol>


<p>A license is time unlimited. Support is included for 1 year since the
date of purchase. We do email support.</p></blockquote>

<p>Feel free to contact me if you have any further questions.
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用ffaker来产生随机数据]]></title>
    <link href="http://qichunren.github.io/blog/2012-01-19-use-ffaker/"/>
    <updated>2012-01-19T22:01:00+08:00</updated>
    <id>http://qichunren.github.io/blog/use-ffaker</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/EmmanuelOga/ffaker">ffaker</a>是一个用来产生随机name\email之类的工具，可以用在开发时先产生一些有意义的随机数据，将数据写在db/seeds.rb中，这样你就不用每次急燥地添加一些asasddfdsf这样的数据。一个好的工作开发环境，可以让心情舒畅，效率加倍。</p>

<p>在db/seeds.rb中，如果要产生100个用户名，直接这样做：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;ffaker&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt; 100.times do</span>
</span><span class='line'><span class="sr">   user = User.new</span>
</span><span class='line'><span class="sr">   user.name = Faker::Name.name =&gt; &quot;David Cao&quot;</span>
</span><span class='line'><span class="sr">   user.email = Faker::Internet.email =&gt; &quot;qichunren@cqror.com&quot;</span>
</span><span class='line'><span class="sr">   user.save</span>
</span><span class='line'><span class="sr"> end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我前一段时间，提交了<a href="https://github.com/EmmanuelOga/ffaker/pull/9">一点代码</a> ，可以产生天朝的姓名：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;ffaker&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Faker::NameCN.first_name # =&gt; 鑫洋</span>
</span><span class='line'><span class="sr">Faker::NameCN.last_name # =&gt; 禹</span>
</span><span class='line'><span class="sr">Faker::NameCN.name # =&gt; 俊伶漫</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ffaker目前最新的版本是1.2，可以产生中文的姓名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customizing rails generator templates]]></title>
    <link href="http://qichunren.github.io/blog/2012-01-12-customizing-rails-generator-templates/"/>
    <updated>2012-01-12T13:49:00+08:00</updated>
    <id>http://qichunren.github.io/blog/customizing-rails-generator-templates</id>
    <content type="html"><![CDATA[<p>Rails framework and twitter bootstrap are good for your startup project, build-in generators generate source code by its way. It is  a good starting point.</p>

<p>But I often have to change default generted source code:</p>

<ul>
<li>Add <strong>encoding: utf-8</strong> into ruby file header, for Ruby 1.9.2 encoding.</li>
<li>Change scaffold view files to apply <a href="http://twitter.github.com/bootstrap/">bootstrap</a> css.</li>
<li>Other things you want to override default templates.</li>
</ul>


<p>Rails provides the mechanism to custom generator behavior.</p>

<p>I have already got it, and source code is on <a href="https://github.com/qichunren/rails_generator_override_templates">github</a>, follow README for usage.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Jruby来部署Rails应用]]></title>
    <link href="http://qichunren.github.io/blog/2011-08-27-deploy-rails-project-with-jruby/"/>
    <updated>2011-08-27T06:36:22+08:00</updated>
    <id>http://qichunren.github.io/blog/deploy-rails-project-with-jruby</id>
    <content type="html"><![CDATA[<p>为了保护最近做的产品的源代码，需要将项目中的源代码进行保护起来。我目前了解到的方案有以下两种：</p>

<ol>
<li><p>使用代码混淆工具</p></li>
<li><p>使用JRuby将Ruby代码编译成java字节码文件（.class）</p></li>
</ol>


<hr />

<p>第一种方案，有一个名为<a href="http://rubyencoder.com">ruby encoder</a>的产品，我试用了一下，发现太重量级了，我个人只是一个可以将代码混淆一下的小工具而已，而ruby encoder有自己的运行加载机制，源代码二次编码，基于域名可以设置产品过期失效时间等等一系列功能，我不需要这些功能，另外它不是免费的，所以我没有采用这个方案。</p>

<p>第二种方安装就是使用JRuby。整体思路就是将Ruby项目的代码编译成java字节码文件，然后运行于Java环境中。</p>

<hr />

<p>将项目中的ruby文件编译成java的class文件不是一件容易的事情，所幸有一个名为warbler的gem可以帮助我们搞定这一切，它可以将项目打包(.war)，同时可以将ruby代码编译成class文件。然后你将生成好的.war文件放进JAVA应用服务器的应用目录中，如Tomcat的webapps中就可以了。</p>

<p>warbler提供若干个任务可供使用：
<code>
qichunren@qichunren-desktop:~/code/ntdeck$ warble -T
warble compiled    # Feature: precompile all Ruby files
warble config      # Generate a configuration file to customize your archive
warble executable  # Feature: make an executable archive
warble gemjar      # Feature: package gem repository inside a jar
warble pluginize   # Install Warbler tasks in your Rails application
warble version     # Display version of Warbler
warble war         # Create the project war file
warble war:clean   # Remove the project war file
warble war:debug   # Dump diagnostic information
</code></p>

<p>平时最常用的就是warble war命令了，需要关注的是warble的配置文件，它的配置文件是通过warble config来生成的，在这个文件中有一系列的配置项可以设置，以下是我的配置文件：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/warble.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Disable Rake-environment-task framework detection by uncommenting/se</span><span class="n">tting</span> <span class="n">to</span> <span class="kp">false</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Warbler.framework_detection = false&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Warbler</span> <span class="n">web</span> <span class="n">application</span> <span class="n">assembly</span> <span class="n">configuration</span> <span class="n">file</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Warbler::Config.new do |config|</span>
</span><span class='line'><span class="sr">  # Features: additional options controlling how the jar is built.</span>
</span><span class='line'><span class="sr">  # Currently the following features are supported:</span>
</span><span class='line'><span class="sr">  # - gemjar: package the gem repository in a jar file in WEB-INF/</span><span class="n">lib</span>
</span><span class='line'>  <span class="c1"># - executable: embed a web server and make the war executable</span>
</span><span class='line'>  <span class="c1"># - compiled: compile .rb files to .class files</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">features</span> <span class="o">=</span> <span class="sx">%w(executable compiled)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Application directories to be included in the webapp.</span>
</span><span class='line'><span class="sr">  config.dirs = %w(app config db lib log vendor tmp)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional files/directories to include, above those in config.dirs</span>
</span><span class='line'>  <span class="c1"># config.includes = FileList[&quot;db&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional files/directories to exclude</span>
</span><span class='line'>  <span class="c1"># config.excludes = FileList[&quot;lib/tasks/*&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional Java .jar files to include.  Note that if .jar files are placed</span>
</span><span class='line'>  <span class="c1"># in lib (and not otherwise excluded) then they need not be mentioned here.</span>
</span><span class='line'>  <span class="c1"># JRuby and JRuby-Rack are pre-loaded in this list.  Be sure to include your</span>
</span><span class='line'>  <span class="c1"># own versions if you directly set the value</span>
</span><span class='line'>  <span class="c1"># config.java_libs += FileList[&quot;lib/java/*.jar&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Loose Java classes and miscellaneous files to be included.</span>
</span><span class='line'>  <span class="c1"># config.java_classes = FileList[&quot;target/classes/&lt;em&gt;*.&lt;/em&gt;&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># One or more pathmaps defining how the java classes should be copied into</span>
</span><span class='line'>  <span class="c1"># the archive. The example pathmap below accompanies the java_classes</span>
</span><span class='line'>  <span class="c1"># configuration above. See http://rake.rubyforge.org/classes/String.html#M000017</span>
</span><span class='line'>  <span class="c1"># for details of how to specify a pathmap.</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.java_classes &amp;lt;&amp;lt; &quot;%{target/classes/,}p&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Bundler support is built-in. If Warbler finds a Gemfile in the</span>
</span><span class='line'>  <span class="c1"># project directory, it will be used to collect the gems to bundle</span>
</span><span class='line'>  <span class="c1"># in your application. If you wish to explicitly disable this</span>
</span><span class='line'>  <span class="c1"># functionality, uncomment here.</span>
</span><span class='line'>  <span class="c1"># config.bundler = false&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># An array of Bundler groups to avoid including in the war file.</span>
</span><span class='line'>  <span class="c1"># Defaults to [&quot;development&quot;, &quot;test&quot;].</span>
</span><span class='line'>  <span class="c1"># config.bundle_without = []&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Other gems to be included. If you don&#39;t use Bundler or a gemspec</span>
</span><span class='line'>  <span class="c1"># file, you need to tell Warbler which gems your application needs</span>
</span><span class='line'>  <span class="c1"># so that they can be packaged in the archive.</span>
</span><span class='line'>  <span class="c1"># For Rails applications, the Rails gems are included by default</span>
</span><span class='line'>  <span class="c1"># unless the vendor/rails directory is present.</span>
</span><span class='line'>  <span class="c1"># config.gems += [&quot;activerecord-jdbcmysql-adapter&quot;, &quot;jruby-openssl&quot;]</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; &quot;tzinfo&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Uncomment this if you don&#39;t want to package rails gem.</span>
</span><span class='line'>  <span class="c1"># config.gems -= [&quot;rails&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># The most recent versions of gems are used.</span>
</span><span class='line'>  <span class="c1"># You can specify versions of gems by using a hash assignment:</span>
</span><span class='line'>  <span class="c1"># config.gems[&quot;rails&quot;] = &quot;2.3.10&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># You can also use regexps or Gem::Dependency objects for flexibility or</span>
</span><span class='line'>  <span class="c1"># finer-grained control.</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; /&lt;sup&gt;merb-/&lt;/sup&gt;</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; Gem::Dependency.new(&quot;merb-core&quot;, &quot;= 0.9.3&quot;)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Include gem dependencies not mentioned specifically. Default is</span>
</span><span class='line'>  <span class="c1"># true, uncomment to turn off.</span>
</span><span class='line'>  <span class="c1"># config.gem_dependencies = false&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Array of regular expressions matching relative paths in gems to be</span>
</span><span class='line'>  <span class="c1"># excluded from the war. Defaults to empty, but you can set it like</span>
</span><span class='line'>  <span class="c1"># below, which excludes test files.</span>
</span><span class='line'>  <span class="c1"># config.gem_excludes = [/&lt;sup&gt;(test|spec)\//]&lt;/sup&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Pathmaps for controlling how application files are copied into the archive</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.application = [&quot;WEB-INF/%p&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Name of the archive (without the extension). Defaults to the basename</span>
</span><span class='line'>  <span class="c1"># of the project directory.</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">jar_name</span> <span class="o">=</span> <span class="s2">&quot;ntdeck&quot;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Name of the MANIFEST.MF template for the war file. Defaults to a simple</span>
</span><span class='line'><span class="sr">  # MANIFEST.MF that contains the version of Warbler used to create the war file.</span>
</span><span class='line'><span class="sr">  # config.manifest_file = &quot;config/</span><span class="no">MANIFEST</span><span class="o">.</span><span class="n">MF</span><span class="s2">&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;  # When using the &#39;compiled&#39; feature and specified, only these Ruby</span>
</span><span class='line'><span class="s2">  # files will be compiled. Default is to compile all .rb files in</span>
</span><span class='line'><span class="s2">  # the application.</span>
</span><span class='line'><span class="s2">  # config.compiled_ruby_files = FileList[&#39;app/&lt;strong&gt;/&lt;em&gt;.rb&#39;]</span>
</span><span class='line'><span class="s2">  compile_me = FileList[&lt;/em&gt;config.dirs.map {|x| &quot;</span><span class="c1">#{x}/&lt;/strong&gt;/&lt;em&gt;.rb&quot;}].exclude(&quot;config/compass.rb&quot;).exclude(&quot;lib/printer/&lt;/em&gt;&quot;)</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">compiled_ruby_files</span> <span class="o">=</span> <span class="n">compile_me</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # === War files only below here ===&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Path to the pre-bundled gem directory inside the war file. Default</span>
</span><span class='line'>  <span class="c1"># is &#39;WEB-INF/gems&#39;. Specify path if gems are already bundled</span>
</span><span class='line'>  <span class="c1"># before running Warbler. This also sets &#39;gem.path&#39; inside web.xml.</span>
</span><span class='line'>  <span class="c1"># config.gem_path = &quot;WEB-INF/vendor/bundler_gems&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Files for WEB-INF directory (next to web.xml). This contains</span>
</span><span class='line'>  <span class="c1"># web.xml by default. If there is an .erb-File it will be processed</span>
</span><span class='line'>  <span class="c1"># with webxml-config. You may want to exclude this file via</span>
</span><span class='line'>  <span class="c1"># config.excludes.</span>
</span><span class='line'>  <span class="c1"># config.webinf_files += FileList[&quot;jboss-web.xml&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Files to be included in the root of the webapp.  Note that files in public</span>
</span><span class='line'>  <span class="c1"># will have the leading &#39;public/&#39; part of the path stripped during staging.</span>
</span><span class='line'>  <span class="c1"># config.public_html = FileList[&quot;public/&lt;strong&gt;/*&quot;, &quot;doc/&lt;/strong&gt;/*&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Pathmaps for controlling how public HTML files are copied into the .war</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.public_html = [&quot;%{public/,}p&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Value of RAILS_ENV for the webapp -- default as shown below</span>
</span><span class='line'>  <span class="c1"># config.webxml.rails.env = ENV[&#39;RAILS_ENV&#39;] || &#39;production&#39;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Application booter to use, one of :rack, :rails, or :merb (autodetected by default)</span>
</span><span class='line'>  <span class="c1"># config.webxml.booter = :rails&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Set JRuby to run in 1.9 mode.</span>
</span><span class='line'>  <span class="c1"># config.webxml.jruby.compat.version = &quot;1.9&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># When using the :rack booter, &quot;Rackup&quot; script to use.</span>
</span><span class='line'>  <span class="c1"># - For &#39;rackup.path&#39;, the value points to the location of the rackup</span>
</span><span class='line'>  <span class="c1"># script in the web archive file. You need to make sure this file</span>
</span><span class='line'>  <span class="c1"># gets included in the war, possibly by adding it to config.includes</span>
</span><span class='line'>  <span class="c1"># or config.webinf_files above.</span>
</span><span class='line'>  <span class="c1"># - For &#39;rackup&#39;, the rackup script you provide as an inline string</span>
</span><span class='line'>  <span class="c1">#   is simply embedded in web.xml.</span>
</span><span class='line'>  <span class="c1"># The script is evaluated in a Rack::Builder to load the application.</span>
</span><span class='line'>  <span class="c1"># Examples:</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup.path = &#39;WEB-INF/hello.ru&#39;</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup = %{require &#39;./lib/demo&#39;; run Rack::Adapter::Camping.new(Demo)}</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup = require &#39;cgi&#39; &amp;amp;&amp;amp; CGI::escapeHTML(File.read(&quot;config.ru&quot;))&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Control the pool of Rails runtimes. Leaving unspecified means</span>
</span><span class='line'>  <span class="c1"># the pool will grow as needed to service requests. It is recommended</span>
</span><span class='line'>  <span class="c1"># that you fix these values when running a production server!</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">webxml</span><span class="o">.</span><span class="n">jruby</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">runtimes</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">webxml</span><span class="o">.</span><span class="n">jruby</span><span class="o">.</span><span class="n">max</span><span class="o">.</span><span class="n">runtimes</span> <span class="o">=</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # JNDI data source name</span>
</span><span class='line'><span class="sr">  # config.webxml.jndi = &#39;jdbc/</span><span class="n">rails</span><span class="err">&#39;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>需要注意的是config.features = %w(executable compiled)配置中，其中的compiled就是可以将ruby代码编译成class代码的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用feedzirra分析提取Feed]]></title>
    <link href="http://qichunren.github.io/blog/2011-05-05-use_feedzirra_to_fetch_feed/"/>
    <updated>2011-05-05T03:12:12+08:00</updated>
    <id>http://qichunren.github.io/blog/use_feedzirra_to_fetch_feed</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/pauldix/feedzirra">feedzirra</a> 是一个很好用的提取和分析feed的工具。用法如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;encoding: utf-8&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">require</span> <span class="s2">&quot;feedzirra&quot;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;def fetch_feed(feed_url)</span>
</span><span class='line'><span class="sr">  feed = Feedzirra::Feed.fetch_and_parse(feed_url)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">feed_entries</span> <span class="o">=</span> <span class="n">feed</span><span class="o">.</span><span class="n">entries</span>
</span><span class='line'>  <span class="n">feed_entries</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">entry</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;puts entry.inspect  </span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end # end each</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">fetch_feed</span> <span class="s2">&quot;http://tech.163.com/special/000944OI/kejitongxin.xml&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>结果：</p>

<p>```
usermatoMacBook-Pro:gitcard qichunren$ ruby lib/blog_fetcher.rb</p>

<h1>&lt;Feedzirra::Parser::RSSEntry:0x00000102137858 @title="外媒分析称微软是黑莓和必应合作最大赢家", @url="http://tech.163.com/11/0504/16/737NSCOS000915BE.html", @summary="【赛迪网讯】5月4日消息，据国外媒体报道，在BlackBerry World上RIM请到一位令人意外的客座讲师——微软CEO史蒂夫-鲍尔默（Steve Ballmer）。鲍尔默在会上公开了与RIM的合作关系，称日后微软的Bing将代替谷歌成为黑莓移动设备上的默认搜索引擎。微软明显将从合作关系中获利，但RIM能够得到什么利益？鲍尔默表示，微软将对黑 ......", @published="2011-05-04 16:55:22"></h1>

<h1>&lt;Feedzirra::Parser::RSSEntry:0x0000010212e140 @title="工信部4月上半月发放241款电信设备进网许可证", @url="http://tech.163.com/11/0504/09/736SR7MQ000915BE.html", @summary="飞象网讯（崔玉贤/文）飞象网得知工信部4月份上半月发放了241款电信设备进网许可证，其中包含10款进网试用批文。 据悉，4月份上半月工信部共发放了TD终端22款，TD-SCDMA/GSM双模数字移动电话机15款，TD-SCDMA/GSM双模无线数据终端2款，TD-SCDMA固定无线终端5款。其中，TD-SCDMA/GSM双模数字移动电话机有5款进网试用批文，夏 ......", @published="2011-05-04 09:02:53"></h1>

<p>```</p>
]]></content>
  </entry>
  
</feed>
