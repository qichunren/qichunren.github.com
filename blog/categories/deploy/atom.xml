<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: deploy | 蕲春人的博客]]></title>
  <link href="http://qichunren.github.io/blog/categories/deploy/atom.xml" rel="self"/>
  <link href="http://qichunren.github.io/"/>
  <updated>2013-05-21T13:42:14+08:00</updated>
  <id>http://qichunren.github.io/</id>
  <author>
    <name><![CDATA[qichunren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Jruby来部署Rails应用]]></title>
    <link href="http://qichunren.github.io/blog/2011-08-27-deploy-rails-project-with-jruby/"/>
    <updated>2011-08-27T06:36:22+08:00</updated>
    <id>http://qichunren.github.io/blog/deploy-rails-project-with-jruby</id>
    <content type="html"><![CDATA[<p>为了保护最近做的产品的源代码，需要将项目中的源代码进行保护起来。我目前了解到的方案有以下两种：</p>

<ol>
<li><p>使用代码混淆工具</p></li>
<li><p>使用JRuby将Ruby代码编译成java字节码文件（.class）</p></li>
</ol>


<hr />

<p>第一种方案，有一个名为<a href="http://rubyencoder.com">ruby encoder</a>的产品，我试用了一下，发现太重量级了，我个人只是一个可以将代码混淆一下的小工具而已，而ruby encoder有自己的运行加载机制，源代码二次编码，基于域名可以设置产品过期失效时间等等一系列功能，我不需要这些功能，另外它不是免费的，所以我没有采用这个方案。</p>

<p>第二种方安装就是使用JRuby。整体思路就是将Ruby项目的代码编译成java字节码文件，然后运行于Java环境中。</p>

<hr />

<p>将项目中的ruby文件编译成java的class文件不是一件容易的事情，所幸有一个名为warbler的gem可以帮助我们搞定这一切，它可以将项目打包(.war)，同时可以将ruby代码编译成class文件。然后你将生成好的.war文件放进JAVA应用服务器的应用目录中，如Tomcat的webapps中就可以了。</p>

<p>warbler提供若干个任务可供使用：
<code>
qichunren@qichunren-desktop:~/code/ntdeck$ warble -T
warble compiled    # Feature: precompile all Ruby files
warble config      # Generate a configuration file to customize your archive
warble executable  # Feature: make an executable archive
warble gemjar      # Feature: package gem repository inside a jar
warble pluginize   # Install Warbler tasks in your Rails application
warble version     # Display version of Warbler
warble war         # Create the project war file
warble war:clean   # Remove the project war file
warble war:debug   # Dump diagnostic information
</code></p>

<p>平时最常用的就是warble war命令了，需要关注的是warble的配置文件，它的配置文件是通过warble config来生成的，在这个文件中有一系列的配置项可以设置，以下是我的配置文件：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/warble.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Disable Rake-environment-task framework detection by uncommenting/se</span><span class="n">tting</span> <span class="n">to</span> <span class="kp">false</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Warbler.framework_detection = false&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Warbler</span> <span class="n">web</span> <span class="n">application</span> <span class="n">assembly</span> <span class="n">configuration</span> <span class="n">file</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Warbler::Config.new do |config|</span>
</span><span class='line'><span class="sr">  # Features: additional options controlling how the jar is built.</span>
</span><span class='line'><span class="sr">  # Currently the following features are supported:</span>
</span><span class='line'><span class="sr">  # - gemjar: package the gem repository in a jar file in WEB-INF/</span><span class="n">lib</span>
</span><span class='line'>  <span class="c1"># - executable: embed a web server and make the war executable</span>
</span><span class='line'>  <span class="c1"># - compiled: compile .rb files to .class files</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">features</span> <span class="o">=</span> <span class="sx">%w(executable compiled)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Application directories to be included in the webapp.</span>
</span><span class='line'><span class="sr">  config.dirs = %w(app config db lib log vendor tmp)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional files/directories to include, above those in config.dirs</span>
</span><span class='line'>  <span class="c1"># config.includes = FileList[&quot;db&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional files/directories to exclude</span>
</span><span class='line'>  <span class="c1"># config.excludes = FileList[&quot;lib/tasks/*&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Additional Java .jar files to include.  Note that if .jar files are placed</span>
</span><span class='line'>  <span class="c1"># in lib (and not otherwise excluded) then they need not be mentioned here.</span>
</span><span class='line'>  <span class="c1"># JRuby and JRuby-Rack are pre-loaded in this list.  Be sure to include your</span>
</span><span class='line'>  <span class="c1"># own versions if you directly set the value</span>
</span><span class='line'>  <span class="c1"># config.java_libs += FileList[&quot;lib/java/*.jar&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Loose Java classes and miscellaneous files to be included.</span>
</span><span class='line'>  <span class="c1"># config.java_classes = FileList[&quot;target/classes/&lt;em&gt;*.&lt;/em&gt;&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># One or more pathmaps defining how the java classes should be copied into</span>
</span><span class='line'>  <span class="c1"># the archive. The example pathmap below accompanies the java_classes</span>
</span><span class='line'>  <span class="c1"># configuration above. See http://rake.rubyforge.org/classes/String.html#M000017</span>
</span><span class='line'>  <span class="c1"># for details of how to specify a pathmap.</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.java_classes &amp;lt;&amp;lt; &quot;%{target/classes/,}p&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Bundler support is built-in. If Warbler finds a Gemfile in the</span>
</span><span class='line'>  <span class="c1"># project directory, it will be used to collect the gems to bundle</span>
</span><span class='line'>  <span class="c1"># in your application. If you wish to explicitly disable this</span>
</span><span class='line'>  <span class="c1"># functionality, uncomment here.</span>
</span><span class='line'>  <span class="c1"># config.bundler = false&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># An array of Bundler groups to avoid including in the war file.</span>
</span><span class='line'>  <span class="c1"># Defaults to [&quot;development&quot;, &quot;test&quot;].</span>
</span><span class='line'>  <span class="c1"># config.bundle_without = []&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Other gems to be included. If you don&#39;t use Bundler or a gemspec</span>
</span><span class='line'>  <span class="c1"># file, you need to tell Warbler which gems your application needs</span>
</span><span class='line'>  <span class="c1"># so that they can be packaged in the archive.</span>
</span><span class='line'>  <span class="c1"># For Rails applications, the Rails gems are included by default</span>
</span><span class='line'>  <span class="c1"># unless the vendor/rails directory is present.</span>
</span><span class='line'>  <span class="c1"># config.gems += [&quot;activerecord-jdbcmysql-adapter&quot;, &quot;jruby-openssl&quot;]</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; &quot;tzinfo&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Uncomment this if you don&#39;t want to package rails gem.</span>
</span><span class='line'>  <span class="c1"># config.gems -= [&quot;rails&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># The most recent versions of gems are used.</span>
</span><span class='line'>  <span class="c1"># You can specify versions of gems by using a hash assignment:</span>
</span><span class='line'>  <span class="c1"># config.gems[&quot;rails&quot;] = &quot;2.3.10&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># You can also use regexps or Gem::Dependency objects for flexibility or</span>
</span><span class='line'>  <span class="c1"># finer-grained control.</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; /&lt;sup&gt;merb-/&lt;/sup&gt;</span>
</span><span class='line'>  <span class="c1"># config.gems &amp;lt;&amp;lt; Gem::Dependency.new(&quot;merb-core&quot;, &quot;= 0.9.3&quot;)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Include gem dependencies not mentioned specifically. Default is</span>
</span><span class='line'>  <span class="c1"># true, uncomment to turn off.</span>
</span><span class='line'>  <span class="c1"># config.gem_dependencies = false&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Array of regular expressions matching relative paths in gems to be</span>
</span><span class='line'>  <span class="c1"># excluded from the war. Defaults to empty, but you can set it like</span>
</span><span class='line'>  <span class="c1"># below, which excludes test files.</span>
</span><span class='line'>  <span class="c1"># config.gem_excludes = [/&lt;sup&gt;(test|spec)\//]&lt;/sup&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Pathmaps for controlling how application files are copied into the archive</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.application = [&quot;WEB-INF/%p&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Name of the archive (without the extension). Defaults to the basename</span>
</span><span class='line'>  <span class="c1"># of the project directory.</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">jar_name</span> <span class="o">=</span> <span class="s2">&quot;ntdeck&quot;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Name of the MANIFEST.MF template for the war file. Defaults to a simple</span>
</span><span class='line'><span class="sr">  # MANIFEST.MF that contains the version of Warbler used to create the war file.</span>
</span><span class='line'><span class="sr">  # config.manifest_file = &quot;config/</span><span class="no">MANIFEST</span><span class="o">.</span><span class="n">MF</span><span class="s2">&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;  # When using the &#39;compiled&#39; feature and specified, only these Ruby</span>
</span><span class='line'><span class="s2">  # files will be compiled. Default is to compile all .rb files in</span>
</span><span class='line'><span class="s2">  # the application.</span>
</span><span class='line'><span class="s2">  # config.compiled_ruby_files = FileList[&#39;app/&lt;strong&gt;/&lt;em&gt;.rb&#39;]</span>
</span><span class='line'><span class="s2">  compile_me = FileList[&lt;/em&gt;config.dirs.map {|x| &quot;</span><span class="c1">#{x}/&lt;/strong&gt;/&lt;em&gt;.rb&quot;}].exclude(&quot;config/compass.rb&quot;).exclude(&quot;lib/printer/&lt;/em&gt;&quot;)</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">compiled_ruby_files</span> <span class="o">=</span> <span class="n">compile_me</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # === War files only below here ===&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Path to the pre-bundled gem directory inside the war file. Default</span>
</span><span class='line'>  <span class="c1"># is &#39;WEB-INF/gems&#39;. Specify path if gems are already bundled</span>
</span><span class='line'>  <span class="c1"># before running Warbler. This also sets &#39;gem.path&#39; inside web.xml.</span>
</span><span class='line'>  <span class="c1"># config.gem_path = &quot;WEB-INF/vendor/bundler_gems&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Files for WEB-INF directory (next to web.xml). This contains</span>
</span><span class='line'>  <span class="c1"># web.xml by default. If there is an .erb-File it will be processed</span>
</span><span class='line'>  <span class="c1"># with webxml-config. You may want to exclude this file via</span>
</span><span class='line'>  <span class="c1"># config.excludes.</span>
</span><span class='line'>  <span class="c1"># config.webinf_files += FileList[&quot;jboss-web.xml&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Files to be included in the root of the webapp.  Note that files in public</span>
</span><span class='line'>  <span class="c1"># will have the leading &#39;public/&#39; part of the path stripped during staging.</span>
</span><span class='line'>  <span class="c1"># config.public_html = FileList[&quot;public/&lt;strong&gt;/*&quot;, &quot;doc/&lt;/strong&gt;/*&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Pathmaps for controlling how public HTML files are copied into the .war</span>
</span><span class='line'>  <span class="c1"># config.pathmaps.public_html = [&quot;%{public/,}p&quot;]&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Value of RAILS_ENV for the webapp -- default as shown below</span>
</span><span class='line'>  <span class="c1"># config.webxml.rails.env = ENV[&#39;RAILS_ENV&#39;] || &#39;production&#39;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Application booter to use, one of :rack, :rails, or :merb (autodetected by default)</span>
</span><span class='line'>  <span class="c1"># config.webxml.booter = :rails&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Set JRuby to run in 1.9 mode.</span>
</span><span class='line'>  <span class="c1"># config.webxml.jruby.compat.version = &quot;1.9&quot;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># When using the :rack booter, &quot;Rackup&quot; script to use.</span>
</span><span class='line'>  <span class="c1"># - For &#39;rackup.path&#39;, the value points to the location of the rackup</span>
</span><span class='line'>  <span class="c1"># script in the web archive file. You need to make sure this file</span>
</span><span class='line'>  <span class="c1"># gets included in the war, possibly by adding it to config.includes</span>
</span><span class='line'>  <span class="c1"># or config.webinf_files above.</span>
</span><span class='line'>  <span class="c1"># - For &#39;rackup&#39;, the rackup script you provide as an inline string</span>
</span><span class='line'>  <span class="c1">#   is simply embedded in web.xml.</span>
</span><span class='line'>  <span class="c1"># The script is evaluated in a Rack::Builder to load the application.</span>
</span><span class='line'>  <span class="c1"># Examples:</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup.path = &#39;WEB-INF/hello.ru&#39;</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup = %{require &#39;./lib/demo&#39;; run Rack::Adapter::Camping.new(Demo)}</span>
</span><span class='line'>  <span class="c1"># config.webxml.rackup = require &#39;cgi&#39; &amp;amp;&amp;amp; CGI::escapeHTML(File.read(&quot;config.ru&quot;))&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Control the pool of Rails runtimes. Leaving unspecified means</span>
</span><span class='line'>  <span class="c1"># the pool will grow as needed to service requests. It is recommended</span>
</span><span class='line'>  <span class="c1"># that you fix these values when running a production server!</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">webxml</span><span class="o">.</span><span class="n">jruby</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">runtimes</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">webxml</span><span class="o">.</span><span class="n">jruby</span><span class="o">.</span><span class="n">max</span><span class="o">.</span><span class="n">runtimes</span> <span class="o">=</span> <span class="mi">1</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # JNDI data source name</span>
</span><span class='line'><span class="sr">  # config.webxml.jndi = &#39;jdbc/</span><span class="n">rails</span><span class="err">&#39;</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>需要注意的是config.features = %w(executable compiled)配置中，其中的compiled就是可以将ruby代码编译成class代码的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Unicorn]]></title>
    <link href="http://qichunren.github.io/blog/2011-05-13-use-unicorn-in-rails/"/>
    <updated>2011-05-13T07:12:12+08:00</updated>
    <id>http://qichunren.github.io/blog/use-unicorn-in-rails</id>
    <content type="html"><![CDATA[<h3>Install</h3>

<p><code>
gem install unicorn
</code></p>

<p>Then add gem 'unicorn' to Gemfile.
bundle exec unicorn_rails to start rails app at 8080 port.</p>

<p>```
caojinhua:qichunren.github.com caojinhua$ unicorn_rails --help
Usage: unicorn_rails [ruby options] [unicorn_rails options] [rackup config file]
Ruby options:
  -e, --eval LINE          evaluate a LINE of code
  -d, --debug              set debugging flags (set $DEBUG to true)
  -w, --warn               turn warnings on for your script
  -I, --include PATH       specify $LOAD_PATH (may be used more than once)
  -r, --require LIBRARY    require the library, before executing your script
unicorn_rails options:
  -o, --host HOST          listen on HOST (default: 0.0.0.0)
  -p, --port PORT          use PORT (default: 8080)
  -E, --env RAILS_ENV      use RAILS_ENV for defaults (default: development)
  -D, --daemonize          run daemonized in the background
  -l {HOST:PORT|PATH},     listen on HOST:PORT or PATH</p>

<pre><code>  --listen             this may be specified multiple times
                       (default: 0.0.0.0:8080)
</code></pre>

<p>  -c, --config-file FILE   Unicorn-specific config file</p>

<pre><code>  --path PATH          Runs Rails app mounted at a specific path.
                       (default: /)
</code></pre>

<p>Common options:
  -h, --help               Show this message
  -v, --version            Show version
```</p>

<p>This is a smaple unicorn config file:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>config/unicorn.conf.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">worker_processes</span> <span class="mi">2</span>
</span><span class='line'><span class="n">working_directory</span> <span class="s2">&quot;/www/temp/ntmenu2/current&quot;</span>
</span><span class='line'><span class="n">listen</span> <span class="mi">3000</span><span class="p">,</span> <span class="ss">:tcp_nopush</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="n">timeout</span> <span class="mi">30</span>
</span><span class='line'><span class="n">pid</span> <span class="s2">&quot;/www/temp/ntmenu2/current/tmp/pids/unicorn.pid&quot;</span>
</span><span class='line'><span class="n">stderr_path</span> <span class="s2">&quot;/www/temp/unicorn.stderr.log&quot;</span>
</span><span class='line'><span class="n">stdout_path</span> <span class="s2">&quot;/www/temp/unicorn.stdout.log&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
