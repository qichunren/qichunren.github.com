<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>蕲春人的博客</title>
    <description>记录我的生活。</description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>开始使用vagrant</title>
        <description>&lt;h1&gt;Vagrant&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; 是一个虚拟机配置管理工具。&lt;/p&gt;

&lt;p&gt;简单来说，Vagrant 可以让你用一个文本文件 Vagrantfile 描述一个虚拟机环境，然后根据你的描述启动这样的一台虚拟机，同时将 Vagrantfile 所在的目录的所有内容，和虚拟机中的 /vagrant 这个目录自动实时同步。入门文档在&lt;a href=&quot;http://docs.vagrantup.com/v2/getting-started/index.html&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2&gt;Get started&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;下载vagrant, 从&lt;a href=&quot;http://downloads.vagrantup.com/&quot;&gt;http://downloads.vagrantup.com/&lt;/a&gt;页面中，根据自己的操作系统平台选择相应的版本下载，我在写这个文档的时候它的最新版本是&lt;em&gt;v1.3.1&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;安装完成后，在命令行终端中会有一个vagrant命令。&lt;/li&gt;
&lt;li&gt;进行自己平时的工作目录，执行&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;git clone git@github.com:qichunren/luna-vagrant.git
cd luna-vagrant
vagrant box add precise64 http://files.vagrantup.com/precise64.box # 下载box，它是一个VirtualBox虚拟机导出的文件，版本是Ubuntu 12.04 LTS 64位
vagrant up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自己的工作目录（就是luna-vagrant项目的上一层项目）是实时与虚拟机中的/code目录保持同步。
luna-vagrant目录是实时与虚拟机中的/vagrant目录保持同步。&lt;/p&gt;

&lt;h2&gt;常用命令&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;vagrant up  # 启动虚拟机
vagrant ssh # ssh登录机器
vagrant halt # 关闭虚拟机
vagrant destory # 删除虚拟机
vagrant status # 显示虚拟机状态
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;怎么样添加box?
vagrant box add precise64 http://files.vagrantup.com/precise64.box&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 22 Sep 2013 20:43:00 +0800</pubDate>
        <link>/tool/2013/09/22/start-use-vagrant/</link>
        <guid isPermaLink="true">/tool/2013/09/22/start-use-vagrant/</guid>
      </item>
    
      <item>
        <title>最近的境况</title>
        <description>&lt;p&gt;好久没有写点东西了。平时虽然脑中想到的东西蛮多的，但是要把它们完整地通过文字表达出来居然有些困难。这是我不想看到的结果。我需要克服各种困难，提高自己的执行效率，提高自己的表达能力。&lt;/p&gt;

&lt;p&gt;我在最近的公司项目中遇到了一些困难，导致工作进展缓慢，压力很大。项目的需求在一个多月之前发生了较多的变化，导致之前的软件设计有许多变化。基于演变后的需求进行的结构逻辑设计方面，在我看来，感觉有些混乱，代码写得不顺畅。然后产品客户方面的界面需求与我们现有的产品设计之间在理解上还有不少差距。项目上线发布时间越来越近，如何在产品发布之前，做出一个完美的产品，真的挑战蛮大的。&lt;/p&gt;

&lt;p&gt;我现在要做的事情就是克服困难，积极沟通，发现问题，及时解决问题。&lt;/p&gt;

&lt;p&gt;加油！&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2013 00:03:00 +0800</pubDate>
        <link>/life/2013/05/22/recently-my-thought/</link>
        <guid isPermaLink="true">/life/2013/05/22/recently-my-thought/</guid>
      </item>
    
      <item>
        <title>Use postgres database on Mac Lion</title>
        <description>&lt;h2&gt;Mac平台&lt;/h2&gt;

&lt;h3&gt;brew info postgresql&lt;/h3&gt;

&lt;pre&gt;
qichunrens-MacBook-Pro:luna-client1 qichunren$ brew info postgresql
postgresql: stable 9.2.1
http://www.postgresql.org/
Depends on: readline, ossp-uuid
Not installed
https://github.com/mxcl/homebrew/commits/master/Library/Formula/postgresql.rb
==&gt; Options
--no-perl
    Build without Perl support
--enable-dtrace
    Build with DTrace support
--32-bit
    Build 32-bit only
--no-python
    Build without Python support
--without-ossp-uuid
    Build without OSSP uuid
==&gt; Caveats
# Build Notes

If builds of PostgreSQL 9 are failing and you have version 8.x installed,
you may need to remove the previous version first. See:
  https://github.com/mxcl/homebrew/issues/issue/2510

To build plpython against a specific Python, set PYTHON prior to brewing:
  PYTHON=/usr/local/bin/python  brew install postgresql
See:
  http://www.postgresql.org/docs/9.2/static/install-procedure.html

# Create/Upgrade a Database

If this is your first install, create a database with:
  initdb /usr/local/var/postgres -E utf8

To migrate existing data from a previous major version (pre-9.2) of PostgreSQL, see:
  http://www.postgresql.org/docs/9.2/static/upgrading.html

# Start/Stop PostgreSQL

If this is your first install, automatically load on login with:
  mkdir -p ~/Library/LaunchAgents
  cp /usr/local/Cellar/postgresql/9.2.1/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
  launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

If this is an upgrade and you already have the homebrew.mxcl.postgresql.plist loaded:
  launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
  cp /usr/local/Cellar/postgresql/9.2.1/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
  launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

Or start manually with:
  pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

And stop with:
  pg_ctl -D /usr/local/var/postgres stop -s -m fast

# Loading Extensions

By default, Homebrew builds all available Contrib extensions.  To see a list of all
available extensions, from the psql command line, run:
  SELECT * FROM pg_available_extensions;

To load any of the extension names, navigate to the desired database and run:
  CREATE EXTENSION [extension name];

For instance, to load the tablefunc extension in the current database, run:
  CREATE EXTENSION tablefunc;

For more information on the CREATE EXTENSION command, see:
  http://www.postgresql.org/docs/9.2/static/sql-createextension.html
For more information on extensions, see:
  http://www.postgresql.org/docs/9.2/static/contrib.html

# Other

Some machines may require provisioning of shared memory:
  http://www.postgresql.org/docs/9.2/static/kernel-resources.html#SYSVIPC

To install postgresql (and ossp-uuid) in 32-bit mode:
   brew install postgresql --32-bit

If you want to install the postgres gem, including ARCHFLAGS is recommended:
    env ARCHFLAGS=&quot;-arch x86_64&quot; gem install pg

&lt;/pre&gt;

&lt;h3&gt;brew install postgresql&lt;/h3&gt;

&lt;pre&gt;
qichunrens-MacBook-Pro:luna-client1 qichunren$ brew install postgresql
==&gt; Installing postgresql dependency: readline
==&gt; Downloading http://ftpmirror.gnu.org/readline/readline-6.2.tar.gz
######################################################################## 100.0%
==&gt; Patching
patching file callback.c
patching file input.c
patching file patchlevel
patching file support/shobj-conf
patching file vi_mode.c
==&gt; ./configure --prefix=/usr/local/Cellar/readline/6.2.4 --mandir=/usr/local/Cellar/readline/6.2.4/share/man --infodir=/usr/local/Cellar/readline/6.2.4/share/info --enable-multibyt
==&gt; make install
==&gt; Caveats
This formula is keg-only: so it was not symlinked into /usr/local.

OS X provides the BSD libedit library, which shadows libreadline.
In order to prevent conflicts when programs look for libreadline we are
defaulting this GNU Readline installation to keg-only.

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/readline/lib
    CPPFLAGS: -I/usr/local/opt/readline/include

==&gt; Summary
/usr/local/Cellar/readline/6.2.4: 31 files, 1.6M, built in 13 seconds
==&gt; Installing postgresql dependency: ossp-uuid
==&gt; Downloading ftp://ftp.ossp.org/pkg/lib/uuid/uuid-1.6.2.tar.gz
######################################################################## 100.0%
######################################################################## 100.0%==&gt; ./configure --prefix=/usr/local/Cellar/ossp-uuid/1.6.2 --without-perl --without-php --without-pgsql
==&gt; make
==&gt; make install
==&gt; Caveats
This formula is keg-only: so it was not symlinked into /usr/local.

OS X provides a uuid.h which conflicts with ossp-uuid's header.

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/ossp-uuid/lib
    CPPFLAGS: -I/usr/local/opt/ossp-uuid/include

==&gt; Summary
/usr/local/Cellar/ossp-uuid/1.6.2: 15 files, 232K, built in 28 seconds
==&gt; Installing postgresql
==&gt; Downloading http://ftp.postgresql.org/pub/source/v9.2.1/postgresql-9.2.1.tar.bz2
######################################################################## 100.0%
==&gt; Patching
patching file src/pl/plpython/Makefile
patching file contrib/uuid-ossp/uuid-ossp.c
==&gt; ./configure --prefix=/usr/local/Cellar/postgresql/9.2.1 --datadir=/usr/local/Cellar/postgresql/9.2.1/share/postgresql --docdir=/usr/local/Cellar/postgresql/9.2.1/share/doc/postg
==&gt; make install-world
==&gt; Caveats
# Build Notes

&lt;/pre&gt;

&lt;h3&gt;initdb /usr/local/var/postgres -E utf8&lt;/h3&gt;

&lt;pre&gt;
qichunrens-MacBook-Pro:luna-client1 qichunren$ initdb /usr/local/var/postgres -E utf8
The files belonging to this database system will be owned by user &quot;qichunren&quot;.
This user must also own the server process.

The database cluster will be initialized with locale &quot;en_US.UTF-8&quot;.
The default text search configuration will be set to &quot;english&quot;.

creating directory /usr/local/var/postgres ... ok
creating subdirectories ... ok
selecting default max_connections ... 20
selecting default shared_buffers ... 1600kB
creating configuration files ... ok
creating template1 database in /usr/local/var/postgres/base/1 ... ok
initializing pg_authid ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects' descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok

WARNING: enabling &quot;trust&quot; authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /usr/local/var/postgres
or
    pg_ctl -D /usr/local/var/postgres -l logfile start


&lt;/pre&gt;

&lt;h3&gt;相关的常用命令&lt;/h3&gt;

&lt;h4&gt;createuser&lt;/h4&gt;

&lt;pre&gt;
qichunrens-MacBook-Pro:luna-server qichunren$ createuser --help
createuser creates a new PostgreSQL role.

Usage:
  createuser [OPTION]... [ROLENAME]

Options:
  -c, --connection-limit=N  connection limit for role (default: no limit)
  -d, --createdb            role can create new databases
  -D, --no-createdb         role cannot create databases (default)
  -e, --echo                show the commands being sent to the server
  -E, --encrypted           encrypt stored password
  -i, --inherit             role inherits privileges of roles it is a
                            member of (default)
  -I, --no-inherit          role does not inherit privileges
  -l, --login               role can login (default)
  -L, --no-login            role cannot login
  -N, --unencrypted         do not encrypt stored password
  -P, --pwprompt            assign a password to new role
  -r, --createrole          role can create new roles
  -R, --no-createrole       role cannot create roles (default)
  -s, --superuser           role will be superuser
  -S, --no-superuser        role will not be superuser (default)
  -V, --version             output version information, then exit
  --interactive             prompt for missing role name and attributes rather
                            than using defaults
  --replication             role can initiate replication
  --no-replication          role cannot initiate replication
  -?, --help                show this help, then exit

Connection options:
  -h, --host=HOSTNAME       database server host or socket directory
  -p, --port=PORT           database server port
  -U, --username=USERNAME   user name to connect as (not the one to create)
  -w, --no-password         never prompt for password
  -W, --password            force password prompt

Report bugs to &lt;pgsql-bugs@postgresql.org&gt;.
&lt;/pre&gt;

&lt;h4&gt;createdb&lt;/h4&gt;

&lt;pre&gt;
qichunrens-MacBook-Pro:luna-server qichunren$ createdb --help
createdb creates a PostgreSQL database.

Usage:
  createdb [OPTION]... [DBNAME] [DESCRIPTION]

Options:
  -D, --tablespace=TABLESPACE  default tablespace for the database
  -e, --echo                   show the commands being sent to the server
  -E, --encoding=ENCODING      encoding for the database
  -l, --locale=LOCALE          locale settings for the database
      --lc-collate=LOCALE      LC_COLLATE setting for the database
      --lc-ctype=LOCALE        LC_CTYPE setting for the database
  -O, --owner=OWNER            database user to own the new database
  -T, --template=TEMPLATE      template database to copy
  -V, --version                output version information, then exit
  -?, --help                   show this help, then exit

Connection options:
  -h, --host=HOSTNAME          database server host or socket directory
  -p, --port=PORT              database server port
  -U, --username=USERNAME      user name to connect as
  -w, --no-password            never prompt for password
  -W, --password               force password prompt
  --maintenance-db=DBNAME      alternate maintenance database

By default, a database with the same name as the current user is created.

Report bugs to &lt;pgsql-bugs@postgresql.org&gt;.

---------
pg_ctl -D /usr/local/var/postgres -l logfile start
createuser luna
createdb -O luna -E utf8 luna_production

psql -U luna luna_production
luna_production=&gt; select * from users;
luna_production=&gt; ALTER USER luna WITH PASSWORD ‘whateverpasswordyouwant’;
&lt;/pre&gt;

&lt;h2&gt;Ubuntu平台&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get -y install  postgresql libpq-dev&lt;/code&gt; 安装完成以后，我们需要更改postgres用户的密码，否则我们就没法使用这个数据库服务器。以postgres这个系统用户的身份运行psql命令，在终端中输入如下:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;sudo su postgres -c psql template1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这时候会出现新的提示符，输入下面两个命令，用新密码替换 &amp;lt;&lt;strong&gt;&lt;em&gt;password&lt;/em&gt;&lt;/strong&gt;&amp;gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ALTER USER postgres WITH PASSWORD &amp;#39;&amp;lt;***password***&amp;gt;&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;

sudo -u postgres psql -c &quot;create user qichunren with password 'qichunren';&quot;
sudo -u postgres psql -c &quot;CREATE DATABASE qichunren_production WITH OWNER qichunren ENCODING 'UTF8';&quot;
# sudo -u postgres psql -c &quot;DROP DATABASE qichunren_production;&quot;
&lt;/pre&gt;

&lt;h3&gt;设置数据库编码&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;psql (9.0.3)
Type &amp;quot;help&amp;quot; for help.

postgres=# update pg_database set datallowconn = TRUE where datname = &amp;#39;template0&amp;#39;;
UPDATE 1
postgres=# \c template0
You are now connected to database &amp;quot;template0&amp;quot;.
template0=# update pg_database set datistemplate = FALSE where datname = &amp;#39;template1&amp;#39;;
UPDATE 1
template0=# drop database template1;
DROP DATABASE
template0=# create database template1 with template = template0 encoding = &amp;#39;UTF8&amp;#39; LC_CTYPE = &amp;#39;en_US.utf8&amp;#39; LC_COLLATE = &amp;#39;en_US.utf8&amp;#39;;
CREATE DATABASE
template0=# update pg_database set datistemplate = TRUE where datname = &amp;#39;template1&amp;#39;;
UPDATE 1
template0=# \c template1
You are now connected to database &amp;quot;template1&amp;quot;.
template1=# update pg_database set datallowconn = FALSE where datname = &amp;#39;template0&amp;#39;;
UPDATE 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 27 Nov 2012 10:52:00 +0800</pubDate>
        <link>/database/2012/11/27/start-use-postgresql/</link>
        <guid isPermaLink="true">/database/2012/11/27/start-use-postgresql/</guid>
      </item>
    
      <item>
        <title>Ruby China Chrome浏览器插件</title>
        <description>&lt;p&gt;前几天，我花了几天业余时间制作了Ruby China社区网站的Chrome浏览器插件，通过这个插件可以：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不用前往Ruby China网站去浏览主题帖子，直接点击插件图标查看主题。&lt;/li&gt;
&lt;li&gt;显示个人未读消息提醒&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;另外，我发现Chrome浏览器的插件开发非常简单，自由度很大，根据它的开发规范，可以非常容易实现扩展开发。在我了解了这一点之后，我更加喜欢Chrome浏览器了。&lt;/p&gt;

&lt;p&gt;这个Chrome浏览器插件项目是开源的，代码在&lt;a href=&quot;https://github.com/qichunren/ruby-china-chrome&quot;&gt;https://github.com/qichunren/ruby-china-chrome&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jun 2012 14:56:00 +0800</pubDate>
        <link>/web/2012/06/18/i-build-ruby-china-chrome-extension/</link>
        <guid isPermaLink="true">/web/2012/06/18/i-build-ruby-china-chrome-extension/</guid>
      </item>
    
      <item>
        <title>使用SSH代理来访访问远程mysql机器</title>
        <description>&lt;p&gt;默认安装的mysql的Linux机器基于安全的原因，一般不支持mysql的远程连接访问。有几种方法可以修改配置来让mysql服务器支持远程连接。但是通过ssh的代理功能，可以不用修改服务器配置，来支持从远程连接mysql服务器。&lt;/p&gt;

&lt;p&gt;在本地通过ssh连接远程的mysql所在的服务器&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;ssh -L 1036:localhost:3306 root@xxx.xx.xx.xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样就将远程的mysql主机代理到本地了，端口是1036。 &lt;a href=&quot;http://zh.wikipedia.org/zh/SSH&quot;&gt;SSH&lt;/a&gt;太强大了&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jun 2012 17:31:00 +0800</pubDate>
        <link>/linux/2012/06/04/use-ssh-proxy-port-trick/</link>
        <guid isPermaLink="true">/linux/2012/06/04/use-ssh-proxy-port-trick/</guid>
      </item>
    
      <item>
        <title>Fixed a problem with creating texture background in cocos2d</title>
        <description>&lt;p&gt;我尝试在cocos2d游戏中使用小图片重复平铺的方式来创建游戏背景时, 总是遇到这个问题，报错如下: &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;Terminating app due to uncaught exception &amp;#39;NSInternalInconsistencyException&amp;#39;, reason: &amp;#39;GL_CLAMP_TO_EDGE should be used in NPOT dimensions&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我的代码是这样的:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;CCSprite *wall = [CCSprite spriteWithFile:@&amp;quot;pattern1.png&amp;quot; rect:CGRectMake(0, 0, 320, 480)];
wall.anchorPoint = ccp(0,0);
[self addChild:wall z:-1 tag:111];
ccTexParams params = {GL_LINEAR, GL_LINEAR, GL_REPEAT, GL_REPEAT};
//ccTexParams params = {GL_LINEAR,GL_LINEAR,GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE};
[wall.texture setTexParameters:&amp;amp;params];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我运行cocos2d项目的测试例子, 却发现它的例子是工作正常的, 百思不得其解啊. 然后我看到它代码的注释中写着:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;// The .png image MUST be power of 2 in order to create a continue effect.
// eg: 32x64, 512x128, 256x1024, 64x64, etc..
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我想可能是我的图片尺寸不符合规格，检查了一下，果然发现纹理图片的不是2的次方的正方形。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;总结，使用小图片重复平铺来创建背景纹理图片的小图片尺寸必须设置成2的n次方的正方形大小。&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jun 2012 22:01:00 +0800</pubDate>
        <link>/ios/cocos2d/game-dev/2012/06/03/fixed-a-problem-with-creating-texture-background-in-cocos2d/</link>
        <guid isPermaLink="true">/ios/cocos2d/game-dev/2012/06/03/fixed-a-problem-with-creating-texture-background-in-cocos2d/</guid>
      </item>
    
      <item>
        <title>怎么样从git提交历史里永久删除一个文件?</title>
        <description>&lt;p&gt;需要整理&lt;/p&gt;

&lt;h2&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://help.github.com/remove-sensitive-data/&quot;&gt;Remove sensitive data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/872565/how-do-i-remove-sensitive-files-from-gits-history&quot;&gt;How do I remove sensitive files from git&amp;rsquo;s history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dound.com/2009/04/git-forever-remove-files-or-folders-from-history/&quot;&gt;git: forever remove files or folders from history&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 17 May 2012 15:04:00 +0800</pubDate>
        <link>/git/2012/05/17/how-to-remove-a-file-from-git-history-forever/</link>
        <guid isPermaLink="true">/git/2012/05/17/how-to-remove-a-file-from-git-history-forever/</guid>
      </item>
    
      <item>
        <title>通过update-rc.d来管理Ubuntu系统的自动启动程序</title>
        <description>&lt;p&gt;转载, 并记下我的使用心得。&lt;/p&gt;

&lt;p&gt;Linux services can be started, stopped and reloaded with the use of scripts stocked in /etc/init.d/.
However, during start up or when changing runlevel, those scripts are searched in /etc/rcX.d/ where X is the runlevel number.
This tutorial will explain how one can activate, deactivate or modify a service start up.
When installing a new service under debian, the default is to enable it. So for instance, if you just installed apache2 package, after you installed it, apache service will be started and so will it be upon the next reboots.
If you do not use apache all the time, you might want to disable this service from starting up upon boot up and simply start it manually when you actually need it by running this command:
&lt;code&gt;
/etc/init.d/apache2 start
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You could either disable this service on boot up by removing any symbolic links in &lt;strong&gt;&lt;em&gt;/etc/rcX.d/SYYapache2&lt;/em&gt;&lt;/strong&gt; or by using &lt;strong&gt;update-rc.d&lt;/strong&gt;.
The advantage of using update-rc.d is that it will take care of removing/adding any required links to /etc/init.d automatically.
Taking apache2 as an example, let&amp;rsquo;s examine how /etc/rcX.d is looking like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# ls -l /etc/rc?.d/*apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc0.d/K91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc1.d/K91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc2.d/S91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc3.d/S91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc4.d/S91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc5.d/S91apache2 -&amp;gt; ../init.d/apache2
lrwxrwxrwx 1 root root 17 2007-07-05 22:51 /etc/rc6.d/K91apache2 -&amp;gt; ../init.d/apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, for runlevels 0, 1 and 6 there is a K at the beginning of the link, for runlevels 2, 3, 4 and 5, there is a S. Those two letters stands for Kill and Start.
On Debian and Ubuntu, runlevels 2, 3, 4 and 5 are multi-users runlevels.
Runlevel 0 is Halt.
Runlevel 1 is single user mode
Runlevel 6 is reboot&lt;/p&gt;

&lt;h3&gt;1. Removing A Service&lt;/h3&gt;

&lt;p&gt;If you want to totally disable apache2 service by hand, you would need to delete every single link in /etc/rcX.d/. Using &lt;strong&gt;update-rc.d&lt;/strong&gt; it is as simple as:
&lt;code&gt;
update-rc.d -f apache2 remove
&lt;/code&gt;
The use of &lt;strong&gt;&lt;em&gt;-f&lt;/em&gt;&lt;/strong&gt; is to force the removal of the symlinks even if there is still /etc/init.d/apache2.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;    Note: This command will only disable the service until next time the service is upgraded. If you want to make sure the service won&amp;#39;t be re-enabled upon upgrade, you should also type the following:
    # update-rc.d apache2 stop 80 0 1 2 3 4 5 6 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Adding A Service&lt;/h3&gt;

&lt;h4&gt;2.1. Default Priorities&lt;/h4&gt;

&lt;p&gt;Now, if you want to re-add this service to be started on boot up, you can simply use:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# update-rc.d apache2 defaults
Adding system startup for /etc/init.d/apache2 ...
/etc/rc0.d/K20apache2 -&amp;gt; ../init.d/apache2
/etc/rc1.d/K20apache2 -&amp;gt; ../init.d/apache2
/etc/rc6.d/K20apache2 -&amp;gt; ../init.d/apache2
/etc/rc2.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc3.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc4.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc5.d/S20apache2 -&amp;gt; ../init.d/apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2.2. Custom Priorities&lt;/h4&gt;

&lt;p&gt;But as you can see, the default value is 20 which is pretty different than 91 &amp;hellip; a S20 link is started before a S91 and and K91 is kill before K20.
To force apache2 to be started with priorities 91 for both Start and Kill, we need to use the following command:
&amp;ldquo;`&lt;/p&gt;

&lt;h1&gt;update-rc.d apache2 defaults 91&lt;/h1&gt;

&lt;p&gt;Adding system startup for /etc/init.d/apache2 &amp;hellip;
/etc/rc0.d/K91apache2 -&amp;gt; ../init.d/apache2
/etc/rc1.d/K91apache2 -&amp;gt; ../init.d/apache2
/etc/rc6.d/K91apache2 -&amp;gt; ../init.d/apache2
/etc/rc2.d/S91apache2 -&amp;gt; ../init.d/apache2
/etc/rc3.d/S91apache2 -&amp;gt; ../init.d/apache2
/etc/rc4.d/S91apache2 -&amp;gt; ../init.d/apache2
/etc/rc5.d/S91apache2 -&amp;gt; ../init.d/apache2
&amp;rdquo;`&lt;/p&gt;

&lt;h3&gt;2.3. Different Priorities For Start And Kill&lt;/h3&gt;

&lt;p&gt;Alternatively, if you want to set different priorities for Start than for Kill, let say Start with 20 and Kill with 80, you will need to run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# update-rc.d apache2 defaults 20 80
Adding system startup for /etc/init.d/apache2 ...
/etc/rc0.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc1.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc6.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc2.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc3.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc4.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc5.d/S20apache2 -&amp;gt; ../init.d/apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3. Specifying Custom Runlevels&lt;/h2&gt;

&lt;p&gt;Finally, if you only want to Start and Kill on specific runlevels, like for instance starting apache with priority 20 on runlevels 2, 3, 4 and 5 and Kill with priority 80 on runlevels 0, 1 and 6:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# update-rc.d apache2 start 20 2 3 4 5 . stop 80 0 1 6 .
Adding system startup for /etc/init.d/apache2 ...
/etc/rc0.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc1.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc6.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc2.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc3.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc4.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc5.d/S20apache2 -&amp;gt; ../init.d/apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, to start with priority 20 for runlevel 2, 3 and 4 and priority 30 for runlevel 5 and kill with priority 80 for runlevel 0, 1 and 6:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;# update-rc.d apache2 start 20 2 3 4 . start 30 5 . stop 80 0 1 6 .
Adding system startup for /etc/init.d/apache2 ...
/etc/rc0.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc1.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc6.d/K80apache2 -&amp;gt; ../init.d/apache2
/etc/rc2.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc3.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc4.d/S20apache2 -&amp;gt; ../init.d/apache2
/etc/rc5.d/S30apache2 -&amp;gt; ../init.d/apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;我的总结&lt;/h2&gt;

&lt;p&gt;通过 update-rc.d 来管理Linux下开机自动运行，的确很方便，但是我在实际部署实践中，还是遇到了一些问题，导致开机后没有正常自动启动，但是手工通过service xxx start可以启动。我经过排查发现，原因是在Linux系统启动中，在执行/etc/init.d/中的脚本时，此时系统有可能没有加载好系统中的PATH变量，所以需要在init.d脚本中手工指定，对于使用Ruby脚本写的程序，需要GEM&lt;em&gt;HOME\GEM&lt;/em&gt;PATH等环境变量，我这里是用RVM来管理Ruby的，这是我使用的：
&lt;code&gt;
PATH=&amp;quot;/usr/local/rvm/gems/ruby-1.9.2-p290/bin:/usr/local/rvm/rubies/ruby-1.9.2-p290/bin:/usr/local/rvm/bin:/opt/node/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games&amp;quot;
RUBY_VERSION=&amp;quot;ruby-1.9.2-p290&amp;quot;
GEM_HOME=&amp;quot;/usr/local/rvm/gems/ruby-1.9.2-p290&amp;quot;
GEM_PATH=&amp;quot;/usr/local/rvm/gems/ruby-1.9.2-p290:/usr/local/rvm/gems/ruby-1.9.2-p290@global&amp;quot;
export PATH=$PATH
export RUBY_VERSION=$RUBY_VERSION
export GEM_HOME=$GEM_HOME
export GEM_PATH=$GEM_PATH
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;另外还有一些其它的变量（如果你的启动程序需要），也需要手工指定，如在Ruby 1.9中，就有可能需要指定，比如说unicorn启动脚本：
&lt;code&gt;
export LANG=&amp;#39;en_US.UTF-8&amp;#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最后附上一个常用的init.d启动脚本的样本：
&amp;ldquo;`&lt;/p&gt;

&lt;h1&gt;!/bin/sh&lt;/h1&gt;

&lt;h3&gt;BEGIN INIT INFO&lt;/h3&gt;

&lt;h1&gt;Provides:          gps&lt;/h1&gt;

&lt;h1&gt;Required-Start:    $syslog $remote_fs $network&lt;/h1&gt;

&lt;h1&gt;Required-Stop:     $syslog $remote_fs $network&lt;/h1&gt;

&lt;h1&gt;Should-Start:      fam&lt;/h1&gt;

&lt;h1&gt;Should-Stop:       fam&lt;/h1&gt;

&lt;h1&gt;Default-Start:     2 3 4 5&lt;/h1&gt;

&lt;h1&gt;Default-Stop:      0 1 6&lt;/h1&gt;

&lt;h1&gt;Short-Description: Start the gps.&lt;/h1&gt;

&lt;h3&gt;END INIT INFO&lt;/h3&gt;

&lt;p&gt;PATH=/usr/local/rvm/gems/ruby-1.9.2-p290/bin:/usr/local/rvm/gems/ruby-1.9.2-p290@global/bin:/usr/local/rvm/rubies/ruby-1.9.2-p290/bin:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
DAEMON=/www/georgia/current/lib/gps/gps.rb
NAME=ntgps
DESC=&amp;quot;ntgps daemon&amp;rdquo;
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME&lt;/p&gt;

&lt;p&gt;DAEMON_OPTS=&amp;ldquo;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;set -e
. /lib/lsb/init-functions
export LANG=&amp;lsquo;en&lt;em&gt;US.UTF-8&amp;rsquo;
export PATH=$PATH
export GEM&lt;/em&gt;HOME=/usr/local/rvm/gems/ruby-1.9.2-p290
export GEM_PATH=/usr/local/rvm/gems/ruby-1.9.2-p290:/usr/local/rvm/gems/ruby-1.9.2-p290@global&lt;/p&gt;

&lt;p&gt;case &amp;ldquo;$1&amp;rdquo; in
    start)
        log&lt;em&gt;daemon&lt;/em&gt;msg &amp;ldquo;Starting $DESC&amp;rdquo; $NAME
        if ! start-stop-daemon &amp;ndash;start -m &amp;ndash;background &amp;ndash;oknodo &amp;ndash;quiet &amp;ndash;pidfile $PIDFILE &amp;ndash;exec /usr/local/rvm/rubies/ruby-1.9.2-p290/bin/ruby $DAEMON &amp;ndash; $DAEMON&lt;em&gt;OPTS
        then
            log&lt;/em&gt;end&lt;em&gt;msg 1
        else
            log&lt;/em&gt;end&lt;em&gt;msg 0
        fi
        ;;
    stop)
        log&lt;/em&gt;daemon&lt;em&gt;msg &amp;ldquo;Stopping $DESC&amp;rdquo; $NAME
        if kill  -9 &lt;code&gt;cat $PIDFILE&lt;/code&gt;
        then
            rm -f $PIDFILE
            log&lt;/em&gt;end&lt;em&gt;msg 0
        else
            log&lt;/em&gt;end&lt;em&gt;msg 1
        fi
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    status)
        status&lt;/em&gt;of_proc -p &amp;ldquo;$PIDFILE&amp;rdquo; &amp;ldquo;$DAEMON&amp;rdquo; $NAME &amp;amp;&amp;amp; exit 0 || exit $?
        ;;
    *)
        echo &amp;ldquo;Usage: $SCRIPTNAME {start|stop|restart|status}&amp;rdquo; &amp;gt;&amp;amp;2
        exit 1
        ;;
esac&lt;/p&gt;

&lt;p&gt;exit 0&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;## Resources:
[How-To: Managing services with update-rc.d](http://www.debuntu.org/how-to-manage-services-with-update-rc.d)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Wed, 14 Mar 2012 11:30:00 +0800</pubDate>
        <link>/linux/2012/03/14/how-to-managing-services-with-update-rc-dot-d/</link>
        <guid isPermaLink="true">/linux/2012/03/14/how-to-managing-services-with-update-rc-dot-d/</guid>
      </item>
    
      <item>
        <title>Use Rubyencoder encrypt ruby code</title>
        <description>&lt;p&gt;前些时候研究了一下ruby encoder的加密技术应用，在这里记录一下它的使用过程。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rubyencoder.com/&quot;&gt;Ruby Encoder&lt;/a&gt;将ruby代码加密成不易阅读的格式，然后通过它提供的加载类型来载入ruby代码，从而达到加密的目的。它是一个付费软件，一个许可证要159美金，提供试用版，可以试用一个星期，支持Linux \ FreeBSD \ Mac OS X \ Windows系统。&lt;/p&gt;

&lt;p&gt;首先在Ruby Encoder上注册一个帐号，登录进去后，我这里选择下载Mac OS X版的，RubyEncoder Trial for Mac OS X （RubyEncoder&lt;em&gt;1.3&lt;/em&gt;Trial.dmg），下载后，将dmg中的程序拖到applications目录，就算安装好了。
&lt;code&gt;
qichunren:~ qichunren$ cd /Applications/RubyEncoder/
qichunren:RubyEncoder qichunren$ ls
Icon?               RubyEncoder_User_Manual.pdf bin/
README              Start RubyEncoder.app*      rgloader/
&lt;/code&gt;
第一次使用的话，需要它的官方网站给你提供一个许可证文件(文件名为encode.lic),进行Ruby Encoder的bin目录,执行其中的rubyencoder文件, 它会输出一些它的软件声明信息，一直回车后几次后，阅读完许可声明，它还要求你输入&amp;lsquo;I AGREE&amp;#39;后，然后输出一个注册码（Reg Key）,要求你登录到它的网站中，在个人帐户里，在页面最下面的Available Licenses中填入注册码，然后下载它提供的encode.lic文件，放在Ruby Encoder的bin目录中，现在就可以使用Ruby Encoder了。&lt;/p&gt;

&lt;p&gt;直接执行一下rubyencoder命令，可以先了解一下它的用法。
&amp;ldquo;`
qichunren:bin qichunren$ ./rubyencoder 
RubyEncoder 1.3 Evaluation (built: Aug 31 2010 11:55:25)
Copyright &amp;copy; 2008-2010 rubyencoder.com
Supports encoding for Ruby versions: 1.8.6,1.8.7,1.9.0,1.9.1,1.9.2&lt;/p&gt;

&lt;p&gt;Usage,    single file: rubyencoder [options] file.rb
       multiple files: rubyencoder [options] file1.rb file2.rb file3.rb
            file mask: rubyencoder [options] &amp;rdquo;*.rb&amp;quot;
            file list: rubyencoder [options] @filelist&lt;/p&gt;

&lt;p&gt;&amp;ndash;ruby &lt;version x.y&gt;              Encode for Ruby ver (1.8 default and/or 1.9)
* &amp;ndash;expire &lt;dd/mm/yyyy&gt;             Set script expiration date
* &amp;ndash;days &lt;nn&gt;                       Set script expiration days (from today)
* &amp;ndash;domain &lt;domain&gt;                 Bind script to domain name
* &amp;ndash;domain-encrypt &lt;domain&gt;         Bind and encrypt to domain name (one only)
* &amp;ndash;ip &lt;x.x.x.x[/y.y.y.y]&gt;          Bind script to ip/mask
* &amp;ndash;ip-encrypt &lt;x.x.x.x[/y.y.y.y]&gt;  Bind and encrypt to ip/mask (one only)
* &amp;ndash;mac &lt;x:x:x:x:x:x&gt;               Bind script to mac address
* &amp;ndash;external &lt;filename&gt;             Script will require license file to run
* &amp;ndash;projid &lt;value&gt;                  Set project id (required for ext license)
* &amp;ndash;projkey &lt;value&gt;                 Set project key (required for ext license)
* &amp;ndash;time-server &lt;server,server,...&gt; Set time server (for expiration date check)
* script locking options are disabled for evaluation version&lt;/p&gt;

&lt;p&gt;&amp;ndash;const name=value                Set custom defined constant
  &amp;ndash;catch err=function              Set custom error handler&lt;/p&gt;

&lt;p&gt;-p &amp;ldquo;code&amp;rdquo;|@file  Prepend header code
  -j &amp;ldquo;code&amp;rdquo;|@file  Change default loader error code
  -b &lt;ext&gt;         Set file extension for backup files (bak is default)
  -b-              Disable backup of source files (be careful!)
  -r               Recurse subdirectories (use quotes for file masks)
  -x &amp;ldquo;mask&amp;rdquo;|@list  Exclude files from encoding
  -f &amp;ldquo;mask&amp;rdquo;|@list  Encode only these files
  -o &lt;output_dir&gt;  Specify output directory for encoded scripts
  -w               Wait for key press before exit
  -q               Display settings and request confirmation
  -v               Display version number
  -l               Display license information
  -h               Display this help
&amp;ldquo;`&lt;/p&gt;

&lt;p&gt;像我给公司做的一个小项目，我只需要加密rails目录中的app目录就足够了，官方也建议只加密app目录就行了，可能是为了避免一些加密问题？
&lt;code&gt;
qichunren:bin qichunren$ ./rubyencoder --ruby 1.9 /Users/qichunren/code/menu/app/**/*.rb
&lt;/code&gt;
这样就完成了app目录中的rb代码加密，同时它还备份了原来的rb文件，是同名的后缀为bak的文件，在部署中应该将.bak文件都删除掉。还有一件事情要做，需要把Ruby Encoder的相当于解密的加载器文件复制到app目录中，也就是加密代码的上一级目录里面来，这样项目可以正常执行了。
&lt;code&gt;
qichunren:RubyEncoder qichunren$ pwd
/Applications/RubyEncoder
qichunren:RubyEncoder qichunren$ cp -r rgloader/ /Users/qichunren/code/menu/app/
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;下面是我咨询的关于Ruby Encoder的许可证相关的几个问题的官方回复邮件。
&amp;rdquo;`
Hi,&lt;/p&gt;

&lt;p&gt;Thank you for your interest in RubyEncoder. Please find answers below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;After I paid $159 for RubyEncoder, do I have license to run rubyencoder on different machines for different systems(mac or linux). I have serval machines for development and deployment.
RubyEncoder is licensed per-machine. One license lets you install and
use the encoder to one physical or virtual machine. If you use multiple
machines for development you may purchase additional licenses for $99
each. Note, loaders that are required to run protected files are free.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I developed on Mac OSX system usually, then deploy my rails application on Linux (Ubuntu 11). This goes well currently. I want to know after encode my rails 3 application on mac, then will it goes well on my deployed Linux machine?
Yes, you encode on your Mac and then install encoded files to your Linux
machine as usual. To run protected files on Linux you need to install
(copy a folder) RubyEncoder loaders for Linux to your rails root folder.
With version 1.3 you can encode your application controllers, helpers
and model rails files. Do not encode any other standard or configuration
rails files. For non-rails Ruby files you may encode any code. Ruby
verisons 1.8.6,1.8.7.1.9.0-1.9.3 are supported.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After I paid $159 for RubyEncoder, do I have to paid again for your update version? Can I get free follow-on support service and software update?
Once you pay you get 1 year of free support and updates.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How long is a paid license?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A license is time unlimited. Support is included for 1 year since the
date of purchase. We do email support.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Feel free to contact me if you have any further questions.
&amp;ldquo;`&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Feb 2012 13:10:00 +0800</pubDate>
        <link>/ruby/2012/02/27/use-rubyencoder-encrypt-ruby-code/</link>
        <guid isPermaLink="true">/ruby/2012/02/27/use-rubyencoder-encrypt-ruby-code/</guid>
      </item>
    
      <item>
        <title>Create custom tags in Smarty 3</title>
        <description>&lt;p&gt;接着上一篇，还是来说说PHP模板引擎Smarty。PHP的众多CMS框架，如DEDE CMS，对于前端展示都是有一套自己开发的标签，用于显示管理后台维护的数据。在DEDECMS中，如下的代码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;h2&amp;gt;最近新闻&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;
    {dede:arclist typeid=&amp;#39;1&amp;#39; row=&amp;#39;10&amp;#39;}
    &amp;lt;li&amp;gt;[field:textlink/]&amp;lt;/li&amp;gt;
    {/dede:arclist}
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就可以显示最近type id为1的10条新闻。在Smarty中创建属于自己的标签是很容易的，我之前在网络上搜索的关于创建smarty标签的内容大多数都是基于Smarty2的，我基于Smarty3中的plugins目录的代码了解到在Smarty3中创建自定义标签更为简单直观。&lt;/p&gt;

&lt;p&gt;在smarty程序包的plugins目录中，可以看到有block \ function \ modifier 等几种前缀的php文件。像block前缀的php文件可以创建闭合的标签，就如上文提到的那个dede cms新闻标签的例子。现在我正是要创建这样类型的标签。&lt;/p&gt;

&lt;p&gt;我结合CodeIgniter来说明，我现在创建一个用户列表的标签，可以显示最近注册的用户。
在smarty的plugins目录中创建的文件会自动被smarty加载而识别的，文件名和其中的function 名称需要特定的约定好的格式。
我现在想创建一个users标签,还有一个limit参数，用来显示取多少条数据&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;用户列表：
&amp;lt;ul&amp;gt;
    &amp;lt;{users limit=&amp;#39;3&amp;#39;}&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;{$user-&amp;gt;login}&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;{/users}&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么文件名就应该指定为block.users.php，然后function应该命名为smarty&lt;em&gt;block&lt;/em&gt;users：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?php
function smarty_block_users($params, $content, $smarty, &amp;amp;$repeat){
    if (empty($content)){
        if (empty($params[&amp;#39;limit&amp;#39;])) {
            $limit = 10;
        } else {
            $limit = $params[&amp;#39;limit&amp;#39;];
        }
        $CI =&amp;amp; get_instance();
        $GLOBALS[&amp;#39;users&amp;#39;] = $CI-&amp;gt;db-&amp;gt;query(&amp;quot;select * from users order by created_at desc limit $limit&amp;quot;)-&amp;gt;result();
    }
    if(isset($GLOBALS[&amp;#39;users&amp;#39;]) != NULL &amp;amp;&amp;amp; count($GLOBALS[&amp;#39;users&amp;#39;])&amp;gt;0){
        $user = array_shift($GLOBALS[&amp;#39;users&amp;#39;]);
        $smarty-&amp;gt;assign(&amp;#39;user&amp;#39;, $user);
        if (count($GLOBALS[&amp;#39;users&amp;#39;]) == 0){
            unset($GLOBALS[&amp;#39;users&amp;#39;]);
            $repeat = false;
        }
        $repeat = true;
    }else {
        $repeat = false;
    }

    return $content;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个function中有四个参数，$params参数存储的是标签中的属性信息，如上面的limit。$content是标签中间的内容，$smarty是smarty的实例对象，$repeat用于指定block是否重复执行。
解释完了function的参数，我想其中的执行原理应该很容易看明白了吧。&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Feb 2012 14:21:00 +0800</pubDate>
        <link>/php/2012/02/26/create-custom-tags-in-smarty/</link>
        <guid isPermaLink="true">/php/2012/02/26/create-custom-tags-in-smarty/</guid>
      </item>
    
  </channel>
</rss>